#class7

#get first digit

FirstDigit:=proc(n)
local a;

a:=n;
while a>= 10 do:
    a:= a/10;
od:
return(floor(a));
end:

#simulation: 1: Random Big Number [1,10^20] 2: keep random a new number from [1,N] for 10 times (the random will be new N) 3: take the digit of last number

RandomBenford:=proc(N,k)
local roll,i,B;
B:=N;

for i from 1 to k do:
    roll:=rand(1..B);
    B:=roll();
 
od:
return(B);
end:

Benford:=proc()
local N,k,Sam;
N:=10^20;
k:=10;
Sam := RandomBenford(N,k);
return(FirstDigit(Sam));
end:

SimBenford:=proc(n)
local A,i,k;
A:=[0$9];
for i from 1 to n do:
    k:=Benford();
    A[k] := A[k]+1;
od:
return(evalf(A/n));
end:


Fibo := proc(n) option remember;

if type(n, nonnegint) = false then 
	ERROR("BadInput");
fi:

if n <= 1 then
	return(1);
else
	return Fibo(n - 1) + Fibo(n - 2);
fi:
end:

SimBenfibo:=proc(n)

local A, i, k;
A:=[0$9];
for i from 1 to n do:
	k:=FirstDigit(Fibo(i));
	A[k]:=A[k]+1;
od:
return(evalf(A/n));
end: